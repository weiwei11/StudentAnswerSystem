# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2018-01-31 05:28
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date_time', models.DateTimeField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Disccussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date_time', models.DateTimeField()),
                ('content', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('kind', models.CharField(max_length=100)),
                ('created_date_time', models.DateTimeField()),
                ('begin_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField()),
                ('time_length', models.DurationField()),
                ('can_submit_num', models.PositiveSmallIntegerField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_order_number', models.PositiveSmallIntegerField()),
                ('gaven_score', models.PositiveSmallIntegerField()),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationAnswerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_order_number', models.PositiveSmallIntegerField()),
                ('gaven_total_score', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationAnswerPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date_time', models.DateTimeField()),
                ('gaven_total_score', models.PositiveSmallIntegerField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date_time', models.DateTimeField()),
                ('total_score', models.PositiveSmallIntegerField()),
                ('accessible_groups', models.ManyToManyField(to='auth.Group')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('order_number', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationQuestionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('group_order_number', models.PositiveSmallIntegerField()),
                ('total_score', models.PositiveSmallIntegerField()),
                ('belong_to_examination_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationPaper')),
            ],
        ),
        migrations.CreateModel(
            name='PersonInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=20)),
                ('gender', models.NullBooleanField()),
                ('age', models.PositiveSmallIntegerField()),
                ('head_portrait', models.ImageField(upload_to=b'')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_description', models.TextField()),
                ('created_date_time', models.DateTimeField()),
                ('accessible_groups', models.ManyToManyField(to='auth.Group')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('order_number', models.PositiveSmallIntegerField()),
                ('belong_to_Answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='SubExaminationAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('order_number', models.PositiveSmallIntegerField()),
                ('belong_to_examination_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationAnswer')),
                ('sub_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.SubAnswer')),
            ],
        ),
        migrations.CreateModel(
            name='SubExaminationQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('order_number', models.PositiveSmallIntegerField()),
                ('belong_to_examination_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='SubQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveSmallIntegerField()),
                ('content', models.TextField()),
                ('kind', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=50)),
                ('subject', models.CharField(max_length=50)),
                ('related_knowledge_point', models.CharField(max_length=50)),
                ('standard_answer', models.TextField()),
                ('belong_to_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.Question')),
            ],
        ),
        migrations.CreateModel(
            name='UserExaminationRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField()),
                ('submit_num', models.PositiveSmallIntegerField()),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.Examination')),
                ('examination_answer_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationAnswerPaper')),
                ('participator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='subexaminationquestion',
            name='sub_Question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.SubQuestion'),
        ),
        migrations.AddField(
            model_name='examinationquestion',
            name='belong_to_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationQuestionGroup'),
        ),
        migrations.AddField(
            model_name='examinationquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.Question'),
        ),
        migrations.AddField(
            model_name='examinationanswerpaper',
            name='examination_paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationPaper'),
        ),
        migrations.AddField(
            model_name='examinationanswergroup',
            name='belong_to_answer_paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationAnswerPaper'),
        ),
        migrations.AddField(
            model_name='examinationanswer',
            name='belong_to_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationAnswerGroup'),
        ),
        migrations.AddField(
            model_name='examination',
            name='examination_paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.ExaminationPaper'),
        ),
        migrations.AddField(
            model_name='disccussion',
            name='related_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.Question'),
        ),
        migrations.AddField(
            model_name='class',
            name='class_examination_papers',
            field=models.ManyToManyField(to='StudentAnswerApp.ExaminationPaper'),
        ),
        migrations.AddField(
            model_name='class',
            name='class_examinations',
            field=models.ManyToManyField(to='StudentAnswerApp.Examination'),
        ),
        migrations.AddField(
            model_name='class',
            name='class_members',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='class',
            name='class_questions',
            field=models.ManyToManyField(to='StudentAnswerApp.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StudentAnswerApp.Question'),
        ),
    ]
